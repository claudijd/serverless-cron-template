service: aws-python-scheduled-cron

frameworkVersion: ">=1.2.0 <2.0.0"

provider:
  name: aws
  runtime: python3.6
  region: us-west-2

functions:
  cron:
    handler: handler.run
    events:
      # Invoke Lambda function every minute
      - schedule: rate(1 minute)
    alarms: 
      - functionErrors
      - HTTPObsDownAlarm
      - functionThrottles

plugins:
  - serverless-plugin-aws-alerts

# This part is specific for HTTP Observatory Runner project

custom:
  alerts:
    # stages:
      # - production
      # - dev
    topics:
      alarm:
        topic: ${self:service}-httpobs-exception-alarm
        notifications:
          - protocol: email
            endpoint: culucenk@mozilla.com # Change this to your email address
    definitions:
      HTTPObsDownAlarm:
        description: 'HTTP Observatory is down'
        namespace: 'AWS/Lambda'
        metric: HTTPObsDownException
        threshold: 0
        statistic: Minimum
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanThreshold
        # This will catch if lambdas are logging in JSON format, like: {"level":"ERROR","message":"some message"}
        pattern: '{ $.level = "ERROR" }'
        # For this to work, we need to create a custom CloudWatch metric 
        # pattern: 'HTTPObs exception'
    alarms:
      - functionErrors
      - functionThrottles
      - HTTPObsDownAlarm
